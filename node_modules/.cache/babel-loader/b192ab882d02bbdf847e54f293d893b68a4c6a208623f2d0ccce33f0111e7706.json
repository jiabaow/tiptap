{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import{NodeViewWrapper,NodeViewContent}from'@tiptap/react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const MCQComponent=_ref=>{let{node,updateAttributes}=_ref;const{questionText,answers,mode}=node.attrs;const[selectedAnswer,setSelectedAnswer]=useState(null);const[submitted,setSubmitted]=useState(false);const questionTextareaRef=useRef(null);const answerTextareaRefs=useRef([]);const adjustHeight=el=>{if(el){el.style.height='auto';el.style.height=\"\".concat(el.scrollHeight,\"px\");}};useEffect(()=>{adjustHeight(questionTextareaRef.current);},[questionText]);useEffect(()=>{answers.forEach((_,index)=>adjustHeight(answerTextareaRefs.current[index]));},[answers]);const handleAnswerChange=index=>{setSelectedAnswer(answers[index].text);};const handleQuestionTextChange=e=>{updateAttributes({questionText:e.target.value});adjustHeight(e.target);};const handleAnswerTextChange=(index,text)=>{const newAnswers=answers.map((answer,i)=>{if(i===index){return{...answer,text};}return answer;});updateAttributes({answers:newAnswers});};const handleAnswerTextAreaChange=(index,e)=>{handleAnswerTextChange(index,e.target.value);adjustHeight(e.target);};const handleAnswerCorrectChange=(index,correct)=>{const newAnswers=answers.map((answer,i)=>{if(i===index){return{...answer,correct};}return answer;});updateAttributes({answers:newAnswers});};const addAnswer=()=>{const newAnswers=[...answers,{text:'',correct:false}];updateAttributes({answers:newAnswers});};const removeAnswer=index=>{const newAnswers=answers.filter((_,i)=>i!==index);updateAttributes({answers:newAnswers});};const handleSubmit=()=>{setSubmitted(true);};const isSelectedAnswerCorrect=()=>{const answer=answers.find(answer=>answer.text===selectedAnswer);return answer===null||answer===void 0?void 0:answer.correct;};return/*#__PURE__*/_jsxs(NodeViewWrapper,{className:\"mcq-node\",children:[mode==='edit'?/*#__PURE__*/_jsxs(\"div\",{className:\"mcq-edit\",children:[/*#__PURE__*/_jsx(\"textarea\",{ref:questionTextareaRef,value:questionText,onChange:handleQuestionTextChange,placeholder:\"Question\",style:{width:'100%',resize:'none',overflow:'hidden',minHeight:'3em'}}),answers.map((answer,index)=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"textarea\",{ref:el=>answerTextareaRefs.current[index]=el,value:answer.text,onChange:e=>handleAnswerTextAreaChange(index,e),placeholder:\"Answer \".concat(index+1),style:{width:'75%',resize:'none',overflow:'hidden',minHeight:\"2em\"}}),/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:answer.correct,onChange:e=>handleAnswerCorrectChange(index,e.target.checked)}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>removeAnswer(index),children:\"Remove\"})]},index)),/*#__PURE__*/_jsx(\"button\",{onClick:addAnswer,children:\"Add Answer\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"mcq-view\",children:[/*#__PURE__*/_jsx(\"p\",{children:questionText}),answers.map((answer,index)=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"mcq\",value:answer.text,checked:selectedAnswer===answer.text,onChange:()=>handleAnswerChange(index),disabled:submitted}),/*#__PURE__*/_jsx(\"label\",{style:{marginLeft:8},children:answer.text}),submitted&&selectedAnswer===answer.text&&/*#__PURE__*/_jsx(\"span\",{style:{marginLeft:8,color:isSelectedAnswerCorrect()?'green':'red'},children:isSelectedAnswerCorrect()?'Correct':'Incorrect'})]},index)),!submitted&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleSubmit,children:\"Submit\"})]}),/*#__PURE__*/_jsx(NodeViewContent,{})]});};export default MCQComponent;","map":{"version":3,"names":["React","useEffect","useRef","useState","NodeViewWrapper","NodeViewContent","jsx","_jsx","jsxs","_jsxs","MCQComponent","_ref","node","updateAttributes","questionText","answers","mode","attrs","selectedAnswer","setSelectedAnswer","submitted","setSubmitted","questionTextareaRef","answerTextareaRefs","adjustHeight","el","style","height","concat","scrollHeight","current","forEach","_","index","handleAnswerChange","text","handleQuestionTextChange","e","target","value","handleAnswerTextChange","newAnswers","map","answer","i","handleAnswerTextAreaChange","handleAnswerCorrectChange","correct","addAnswer","removeAnswer","filter","handleSubmit","isSelectedAnswerCorrect","find","className","children","ref","onChange","placeholder","width","resize","overflow","minHeight","type","checked","onClick","name","disabled","marginLeft","color"],"sources":["/Users/wenjiabao/tiptap/src/MCQComponent.tsx"],"sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport { NodeViewWrapper, NodeViewContent } from '@tiptap/react';\n\ninterface Answer {\n    text: string;\n    correct: boolean;\n}\n\ninterface MCQComponentProps {\n    node: {\n        attrs: {\n            questionText: string;\n            answers: Answer[];\n            mode: 'edit' | 'view';\n        };\n    };\n    updateAttributes: (attributes: any) => void;\n}\n\nconst MCQComponent: React.FC<MCQComponentProps> = ({ node, updateAttributes }) => {\n    const { questionText, answers, mode } = node.attrs;\n    const [selectedAnswer, setSelectedAnswer] = useState<string | null>(null);\n    const [submitted, setSubmitted] = useState<boolean>(false);\n\n    const questionTextareaRef = useRef<HTMLTextAreaElement>(null);\n    const answerTextareaRefs = useRef<Array<HTMLTextAreaElement | null>>([]);\n\n    const adjustHeight = (el: HTMLTextAreaElement | null) => {\n        if (el) {\n            el.style.height = 'auto';\n            el.style.height = `${el.scrollHeight}px`;\n        }\n    }\n\n    useEffect(() => {\n        adjustHeight(questionTextareaRef.current);\n    }, [questionText]);\n\n    useEffect(() => {\n        answers.forEach((_, index) => adjustHeight(answerTextareaRefs.current[index]));\n    }, [answers]);\n\n    const handleAnswerChange = (index: number) => {\n        setSelectedAnswer(answers[index].text);\n    };\n\n    const handleQuestionTextChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n        updateAttributes({ questionText: e.target.value });\n        adjustHeight(e.target);\n    };\n\n    const handleAnswerTextChange = (index: number, text: string) => {\n        const newAnswers = answers.map((answer, i) => {\n            if (i === index) {\n                return { ...answer, text };\n            }\n            return answer;\n        });\n        updateAttributes({ answers: newAnswers });\n    };\n\n    const handleAnswerTextAreaChange = (index: number, e: React.ChangeEvent<HTMLTextAreaElement>) => {\n        handleAnswerTextChange(index, e.target.value);\n        adjustHeight(e.target);\n    };\n\n    const handleAnswerCorrectChange = (index: number, correct: boolean) => {\n        const newAnswers = answers.map((answer, i) => {\n            if (i === index) {\n                return { ...answer, correct };\n            }\n            return answer;\n        });\n        updateAttributes({ answers: newAnswers });\n    };\n\n    const addAnswer = () => {\n        const newAnswers = [...answers, { text: '', correct: false }];\n        updateAttributes({ answers: newAnswers });\n    };\n\n    const removeAnswer = (index: number) => {\n        const newAnswers = answers.filter((_, i) => i !== index);\n        updateAttributes({ answers: newAnswers });\n    };\n\n    const handleSubmit = () => {\n        setSubmitted(true);\n    }\n\n    const isSelectedAnswerCorrect = () => {\n        const answer = answers.find(answer => answer.text === selectedAnswer);\n        return answer?.correct;\n    };\n\n    return (\n        <NodeViewWrapper className=\"mcq-node\">\n            {mode === 'edit' ? (\n                <div className=\"mcq-edit\">\n                    <textarea\n                        ref={questionTextareaRef}\n                        value={questionText}\n                        onChange={handleQuestionTextChange}\n                        placeholder=\"Question\"\n                        style={{width: '100%', resize: 'none', overflow: 'hidden', minHeight: '3em'}}\n                    />\n                    {answers.map((answer, index) => (\n                        <div key={index}>\n                            <textarea\n                                ref={(el) => answerTextareaRefs.current[index] = el}\n                                value={answer.text}\n                                onChange={(e) => handleAnswerTextAreaChange(index, e)}\n                                placeholder={`Answer ${index + 1}`}\n                                style={{width: '75%', resize: 'none', overflow: 'hidden', minHeight: \"2em\"}}\n                            />\n                            <input\n                                type=\"checkbox\"\n                                checked={answer.correct}\n                                onChange={(e) => handleAnswerCorrectChange(index, e.target.checked)}\n                            />\n                            <button onClick={() => removeAnswer(index)}>\n                                Remove\n                            </button>\n                        </div>\n                    ))}\n                    <button onClick={addAnswer}>\n                        Add Answer\n                    </button>\n                </div>\n            ) : (\n                <div className=\"mcq-view\">\n                    <p>{questionText}</p>\n                    {answers.map((answer, index) => (\n                        <div key={index}>\n                            <input\n                                type=\"radio\"\n                                name=\"mcq\"\n                                value={answer.text}\n                                checked={selectedAnswer === answer.text}\n                                onChange={() => handleAnswerChange(index)}\n                                disabled={submitted}\n                            />\n                            <label style={{ marginLeft: 8 }}>{answer.text}</label>\n                            {submitted && selectedAnswer === answer.text && (\n                                <span\n                                    style={{\n                                        marginLeft: 8,\n                                        color: isSelectedAnswerCorrect() ? 'green' : 'red',\n                                    }}\n                                >\n                                  {isSelectedAnswerCorrect() ? 'Correct' : 'Incorrect'}\n                                </span>\n                            )}\n                        </div>\n                    ))}\n                    {!submitted && (\n                        <button type=\"button\" onClick={handleSubmit}>Submit</button>\n                    )}\n                </div>\n            )}\n            <NodeViewContent/>\n        </NodeViewWrapper>\n    );\n};\n\nexport default MCQComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}