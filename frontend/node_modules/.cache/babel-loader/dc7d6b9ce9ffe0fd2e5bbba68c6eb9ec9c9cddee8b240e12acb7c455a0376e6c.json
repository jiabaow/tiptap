{"ast":null,"code":"var _jsxFileName = \"/Users/wenjiabao/tiptap/frontend/src/MCQComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { NodeViewWrapper, NodeViewContent } from '@tiptap/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MCQComponent = _ref => {\n  _s();\n  let {\n    node,\n    updateAttributes\n  } = _ref;\n  const {\n    questionText,\n    answers,\n    mode\n  } = node.attrs;\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [submitted, setSubmitted] = useState(false);\n  const questionTextareaRef = useRef(null);\n  const answerTextareaRefs = useRef([]);\n  const adjustHeight = el => {\n    if (el) {\n      el.style.height = 'auto';\n      el.style.height = \"\".concat(el.scrollHeight, \"px\");\n    }\n  };\n  useEffect(() => {\n    adjustHeight(questionTextareaRef.current);\n  }, [questionText]);\n  useEffect(() => {\n    answers.forEach((_, index) => adjustHeight(answerTextareaRefs.current[index]));\n  }, [answers]);\n  const handleAnswerChange = index => {\n    setSelectedAnswer(answers[index].text);\n  };\n  const handleQuestionTextChange = e => {\n    updateAttributes({\n      questionText: e.target.value\n    });\n    adjustHeight(e.target);\n  };\n  const handleAnswerTextChange = (index, text) => {\n    const newAnswers = answers.map((answer, i) => {\n      if (i === index) {\n        return {\n          ...answer,\n          text\n        };\n      }\n      return answer;\n    });\n    updateAttributes({\n      answers: newAnswers\n    });\n  };\n  const handleAnswerTextAreaChange = (index, e) => {\n    handleAnswerTextChange(index, e.target.value);\n    adjustHeight(e.target);\n  };\n  const handleAnswerCorrectChange = (index, correct) => {\n    const newAnswers = answers.map((answer, i) => {\n      if (i === index) {\n        return {\n          ...answer,\n          correct\n        };\n      }\n      return answer;\n    });\n    updateAttributes({\n      answers: newAnswers\n    });\n  };\n  const addAnswer = () => {\n    const newAnswers = [...answers, {\n      text: '',\n      correct: false\n    }];\n    updateAttributes({\n      answers: newAnswers\n    });\n  };\n  const removeAnswer = index => {\n    const newAnswers = answers.filter((_, i) => i !== index);\n    updateAttributes({\n      answers: newAnswers\n    });\n  };\n  const handleSubmit = () => {\n    setSubmitted(true);\n  };\n  const isSelectedAnswerCorrect = () => {\n    const answer = answers.find(answer => answer.text === selectedAnswer);\n    return answer === null || answer === void 0 ? void 0 : answer.correct;\n  };\n  return /*#__PURE__*/_jsxDEV(NodeViewWrapper, {\n    className: \"mcq-node\",\n    children: [mode === 'edit' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mcq-edit\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: questionTextareaRef,\n        value: questionText,\n        onChange: handleQuestionTextChange,\n        placeholder: \"Question\",\n        style: {\n          width: '100%',\n          resize: 'none',\n          overflow: 'hidden',\n          minHeight: '3em'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: el => answerTextareaRefs.current[index] = el,\n          value: answer.text,\n          onChange: e => handleAnswerTextAreaChange(index, e),\n          placeholder: \"Answer \".concat(index + 1),\n          style: {\n            width: '75%',\n            resize: 'none',\n            overflow: 'hidden',\n            minHeight: \"2em\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: answer.correct,\n          onChange: e => handleAnswerCorrectChange(index, e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeAnswer(index),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addAnswer,\n        children: \"Add Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mcq-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this), answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"mcq\",\n          value: answer.text,\n          checked: selectedAnswer === answer.text,\n          onChange: () => handleAnswerChange(index),\n          disabled: submitted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            marginLeft: 8\n          },\n          children: answer.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 29\n        }, this), submitted && selectedAnswer === answer.text && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginLeft: 8,\n            color: isSelectedAnswerCorrect() ? 'green' : 'red'\n          },\n          children: isSelectedAnswerCorrect() ? 'Correct' : 'Incorrect'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 33\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }, this)), !submitted && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(NodeViewContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n_s(MCQComponent, \"Z640OPLYLkU2fhp6q3CaWOVvB+8=\");\n_c = MCQComponent;\nexport default MCQComponent;\nvar _c;\n$RefreshReg$(_c, \"MCQComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","NodeViewWrapper","NodeViewContent","jsxDEV","_jsxDEV","MCQComponent","_ref","_s","node","updateAttributes","questionText","answers","mode","attrs","selectedAnswer","setSelectedAnswer","submitted","setSubmitted","questionTextareaRef","answerTextareaRefs","adjustHeight","el","style","height","concat","scrollHeight","current","forEach","_","index","handleAnswerChange","text","handleQuestionTextChange","e","target","value","handleAnswerTextChange","newAnswers","map","answer","i","handleAnswerTextAreaChange","handleAnswerCorrectChange","correct","addAnswer","removeAnswer","filter","handleSubmit","isSelectedAnswerCorrect","find","className","children","ref","onChange","placeholder","width","resize","overflow","minHeight","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onClick","name","disabled","marginLeft","color","_c","$RefreshReg$"],"sources":["/Users/wenjiabao/tiptap/frontend/src/MCQComponent.tsx"],"sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport { NodeViewWrapper, NodeViewContent } from '@tiptap/react';\n\ninterface Answer {\n    text: string;\n    correct: boolean;\n}\n\ninterface MCQComponentProps {\n    node: {\n        attrs: {\n            questionText: string;\n            answers: Answer[];\n            mode: 'edit' | 'view';\n        };\n    };\n    updateAttributes: (attributes: any) => void;\n}\n\nconst MCQComponent: React.FC<MCQComponentProps> = ({ node, updateAttributes }) => {\n    const { questionText, answers, mode } = node.attrs;\n    const [selectedAnswer, setSelectedAnswer] = useState<string | null>(null);\n    const [submitted, setSubmitted] = useState<boolean>(false);\n\n    const questionTextareaRef = useRef<HTMLTextAreaElement>(null);\n    const answerTextareaRefs = useRef<Array<HTMLTextAreaElement | null>>([]);\n\n    const adjustHeight = (el: HTMLTextAreaElement | null) => {\n        if (el) {\n            el.style.height = 'auto';\n            el.style.height = `${el.scrollHeight}px`;\n        }\n    }\n\n    useEffect(() => {\n        adjustHeight(questionTextareaRef.current);\n    }, [questionText]);\n\n    useEffect(() => {\n        answers.forEach((_, index) => adjustHeight(answerTextareaRefs.current[index]));\n    }, [answers]);\n\n    const handleAnswerChange = (index: number) => {\n        setSelectedAnswer(answers[index].text);\n    };\n\n    const handleQuestionTextChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n        updateAttributes({ questionText: e.target.value });\n        adjustHeight(e.target);\n    };\n\n    const handleAnswerTextChange = (index: number, text: string) => {\n        const newAnswers = answers.map((answer, i) => {\n            if (i === index) {\n                return { ...answer, text };\n            }\n            return answer;\n        });\n        updateAttributes({ answers: newAnswers });\n    };\n\n    const handleAnswerTextAreaChange = (index: number, e: React.ChangeEvent<HTMLTextAreaElement>) => {\n        handleAnswerTextChange(index, e.target.value);\n        adjustHeight(e.target);\n    };\n\n    const handleAnswerCorrectChange = (index: number, correct: boolean) => {\n        const newAnswers = answers.map((answer, i) => {\n            if (i === index) {\n                return { ...answer, correct };\n            }\n            return answer;\n        });\n        updateAttributes({ answers: newAnswers });\n    };\n\n    const addAnswer = () => {\n        const newAnswers = [...answers, { text: '', correct: false }];\n        updateAttributes({ answers: newAnswers });\n    };\n\n    const removeAnswer = (index: number) => {\n        const newAnswers = answers.filter((_, i) => i !== index);\n        updateAttributes({ answers: newAnswers });\n    };\n\n    const handleSubmit = () => {\n        setSubmitted(true);\n    }\n\n    const isSelectedAnswerCorrect = () => {\n        const answer = answers.find(answer => answer.text === selectedAnswer);\n        return answer?.correct;\n    };\n\n    return (\n        <NodeViewWrapper className=\"mcq-node\">\n            {mode === 'edit' ? (\n                <div className=\"mcq-edit\">\n                    <textarea\n                        ref={questionTextareaRef}\n                        value={questionText}\n                        onChange={handleQuestionTextChange}\n                        placeholder=\"Question\"\n                        style={{width: '100%', resize: 'none', overflow: 'hidden', minHeight: '3em'}}\n                    />\n                    {answers.map((answer, index) => (\n                        <div key={index}>\n                            <textarea\n                                ref={(el) => answerTextareaRefs.current[index] = el}\n                                value={answer.text}\n                                onChange={(e) => handleAnswerTextAreaChange(index, e)}\n                                placeholder={`Answer ${index + 1}`}\n                                style={{width: '75%', resize: 'none', overflow: 'hidden', minHeight: \"2em\"}}\n                            />\n                            <input\n                                type=\"checkbox\"\n                                checked={answer.correct}\n                                onChange={(e) => handleAnswerCorrectChange(index, e.target.checked)}\n                            />\n                            <button onClick={() => removeAnswer(index)}>\n                                Remove\n                            </button>\n                        </div>\n                    ))}\n                    <button onClick={addAnswer}>\n                        Add Answer\n                    </button>\n                </div>\n            ) : (\n                <div className=\"mcq-view\">\n                    <p>{questionText}</p>\n                    {answers.map((answer, index) => (\n                        <div key={index}>\n                            <input\n                                type=\"radio\"\n                                name=\"mcq\"\n                                value={answer.text}\n                                checked={selectedAnswer === answer.text}\n                                onChange={() => handleAnswerChange(index)}\n                                disabled={submitted}\n                            />\n                            <label style={{ marginLeft: 8 }}>{answer.text}</label>\n                            {submitted && selectedAnswer === answer.text && (\n                                <span\n                                    style={{\n                                        marginLeft: 8,\n                                        color: isSelectedAnswerCorrect() ? 'green' : 'red',\n                                    }}\n                                >\n                                  {isSelectedAnswerCorrect() ? 'Correct' : 'Incorrect'}\n                                </span>\n                            )}\n                        </div>\n                    ))}\n                    {!submitted && (\n                        <button type=\"button\" onClick={handleSubmit}>Submit</button>\n                    )}\n                </div>\n            )}\n            <NodeViewContent/>\n        </NodeViewWrapper>\n    );\n};\n\nexport default MCQComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}